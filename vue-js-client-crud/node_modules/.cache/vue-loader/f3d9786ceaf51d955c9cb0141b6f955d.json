{"remainingRequest":"F:\\GitHub Projects\\Vue.js_Node.js_Express_Sequelize_MySQL_CRUD\\vue-js-client-crud\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\GitHub Projects\\Vue.js_Node.js_Express_Sequelize_MySQL_CRUD\\vue-js-client-crud\\src\\components\\TutorialsList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\GitHub Projects\\Vue.js_Node.js_Express_Sequelize_MySQL_CRUD\\vue-js-client-crud\\src\\components\\TutorialsList.vue","mtime":1606482296000},{"path":"F:\\GitHub Projects\\Vue.js_Node.js_Express_Sequelize_MySQL_CRUD\\vue-js-client-crud\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\GitHub Projects\\Vue.js_Node.js_Express_Sequelize_MySQL_CRUD\\vue-js-client-crud\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\GitHub Projects\\Vue.js_Node.js_Express_Sequelize_MySQL_CRUD\\vue-js-client-crud\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\GitHub Projects\\Vue.js_Node.js_Express_Sequelize_MySQL_CRUD\\vue-js-client-crud\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\GitHub Projects\\Vue.js_Node.js_Express_Sequelize_MySQL_CRUD\\vue-js-client-crud\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxpc3QgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWF4LXdpZHRoOiA3NTBweDsKICBtYXJnaW46IGF1dG87Cn0K"},{"version":3,"sources":["TutorialsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6LA;AACA;AACA;AACA;AACA","file":"TutorialsList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"list row\">\n    <div class=\"col-md-8\">\n      <div class=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Search by title\"\n          v-model=\"searchTitle\"\n        />\n        <div class=\"input-group-append\">\n          <button\n            class=\"btn btn-outline-secondary\"\n            type=\"button\"\n            @click=\"page = 1; retrieveTutorials();\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-12\">\n      <div class=\"mb-3\">\n        Items per Page:\n        <select v-model=\"pageSize\" @change=\"handlePageSizeChange($event)\">\n          <option v-for=\"size in pageSizes\" :key=\"size\" :value=\"size\">\n            {{ size }}\n          </option>\n        </select>\n      </div>\n\n      <b-pagination\n        v-model=\"page\"\n        :total-rows=\"count\"\n        :per-page=\"pageSize\"\n        prev-text=\"Prev\"\n        next-text=\"Next\"\n        @change=\"handlePageChange\"\n      ></b-pagination>\n    </div>\n\n    <div class=\"col-md-6\">\n      <h4>Tutorials List</h4>\n      <ul class=\"list-group\" id=\"tutorials-list\">\n        <li\n          class=\"list-group-item\"\n          :class=\"{ active: index == currentIndex }\"\n          v-for=\"(tutorial, index) in tutorials\"\n          :key=\"index\"\n          @click=\"setActiveTutorial(tutorial, index)\"\n        >\n          {{ tutorial.title }}\n        </li>\n      </ul>\n\n      <button class=\"m-3 btn btn-sm btn-danger\" @click=\"removeAllTutorials\">\n        Remove All\n      </button>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div v-if=\"currentTutorial\">\n        <h4>Tutorial</h4>\n        <div>\n          <label><strong>Title:</strong></label> {{ currentTutorial.title }}\n        </div>\n        <div>\n          <label><strong>Description:</strong></label>\n          {{ currentTutorial.description }}\n        </div>\n        <div>\n          <label><strong>Status:</strong></label>\n          {{ currentTutorial.published ? \"Published\" : \"Pending\" }}\n        </div>\n\n        <a\n          class=\"badge badge-warning\"\n          :href=\"'/tutorials/' + currentTutorial.id\"\n        >\n          Edit\n        </a>\n      </div>\n      <div v-else>\n        <br />\n        <p>Please click on a Tutorial...</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TutorialDataService from \"../services/TutorialDataService\";\n\nexport default {\n  name: \"tutorials-list\",\n  data() {\n    return {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      searchTitle: \"\",\n\n      page: 1,\n      count: 0,\n      pageSize: 3,\n\n      pageSizes: [3, 6, 9],\n    };\n  },\n  methods: {\n    getRequestParams(searchTitle, page, pageSize) {\n      let params = {};\n\n      if (searchTitle) {\n        params[\"title\"] = searchTitle;\n      }\n\n      if (page) {\n        params[\"page\"] = page - 1;\n      }\n\n      if (pageSize) {\n        params[\"size\"] = pageSize;\n      }\n\n      return params;\n    },\n\n    retrieveTutorials() {\n      const params = this.getRequestParams(\n        this.searchTitle,\n        this.page,\n        this.pageSize\n      );\n\n      TutorialDataService.getAll(params)\n        .then((response) => {\n          const { tutorials, totalItems } = response.data;\n          this.tutorials = tutorials;\n          this.count = totalItems;\n\n          console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n\n    handlePageChange(value) {\n      this.page = value;\n      this.retrieveTutorials();\n    },\n\n    handlePageSizeChange(event) {\n      this.pageSize = event.target.value;\n      this.page = 1;\n      this.retrieveTutorials();\n    },\n\n    refreshList() {\n      this.retrieveTutorials();\n      this.currentTutorial = null;\n      this.currentIndex = -1;\n    },\n\n    setActiveTutorial(tutorial, index) {\n      this.currentTutorial = tutorial;\n      this.currentIndex = index;\n    },\n\n    removeAllTutorials() {\n      TutorialDataService.deleteAll()\n        .then((response) => {\n          console.log(response.data);\n          this.refreshList();\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n  },\n  mounted() {\n    this.retrieveTutorials();\n  },\n};\n</script>\n\n<style>\n.list {\n  text-align: left;\n  max-width: 750px;\n  margin: auto;\n}\n</style>\n"]}]}